table(drawn_balls)/ length(drawn_balls)
table(drawn_balls)
plot(drawn_balls)
plot(table(drawn_balls))
table(drawn_balls)
hist(drawn_balls, breaks= c(0,1,2,3), freq = FALSE, right = FALSE)
?hist
hist(drawn_balls)
hist(c('red', 'blue'))
table(drawn_balls)
table(drawn_balls)/ length(drawn_balls)
hist(table(drawn_balls))
hist(table(drawn_balls)/ length(drawn_balls))
hist(table(drawn_balls))
library(lattice)
a <- c(0,0,0,1,1,2)
histogram(a)
histogram(table(drawn_balls))
histogram(drawn_balls)
table(drawn_balls)
table(drawn_balls)/ length(drawn_balls)
table(drawn_balls[x == "blue"])
table(drawn_balls)
blue_freq <- cumsum(drawn_balls == 'blue') / 1:10000
blue_freq <- cumsum(drawn_balls == 'blue') / 1:1000
blue_frew
blue_freq
plot(blue_freq)
plot(blue_freq, type = '1', lwd = 2, col = 'tomato', las = 1)
plot(blue_freq, type = 'l', lwd = 2, col = 'tomato', las = 1)
plot(blue_freq, type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
plot(blue_freq, lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
plot(blue_freq, type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
?plot
plot(blue_freq, 1:1000 ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
blue_freq <- cumsum(drawn_balls == 'blue') / 1:1000
length(blue_freq)
plot(blue_freq, 1:4000 ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
blue_freq <- cumsum(drawn_balls == 'blue') / 1:1000
blue_freq
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1)
xlim = 1:1000)''
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1)
xlim = 1:1000)
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = 1:1000)
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = c(1, 0))
c(1:100)
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = c(1:1000))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = c(1:1000))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = c(1:2))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = repetitions)
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1),
xlim = 1000)
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
blue_freq <- cumsum(drawn_balls == 'blue') / 1000
blue_frew
blue_freq
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
d2 <- stack(blue_freq)
library(ggplot2)
qplot(values, colour=factor(ind), data=d2, geom="density")
d2 <- stack(blue_freq)
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
blue_freq <- cumsum(drawn_balls == 'blue') / 1:1000
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', ylim = c(0, 1))
plot(blue_freq ,type = 'l', lwd = 2, col = 'tomato', las = 1, ylim = c(0, 1))
?plot
shiny::runApp('Desktop/133/lab09')
runApp('Desktop/app1.R')
box1 <- c('blue', 'blue', 'red')
box2 <- c('blue', 'blue', 'red', 'red', 'red', 'white')
repetitions <- 1000
drawn_balls <- matrix(0, nrow = 1000, ncol = 4)
for (r in 1:input$repetitions) {
aux <- runif(1)
if (aux > 0.5) {
drawn_balls[r, ] <- sample(box1, size, replace = TRUE)
} else {
drawn_balls[r,] <- sample(box2, size)
}
}
repetitions <- 1000
drawn_balls <- matrix(0, nrow = 1000, ncol = 4)
for (r in 1:repetitions) {
aux <- runif(1)
if (aux > 0.5) {
drawn_balls[r, ] <- sample(box1, size, replace = TRUE)
} else {
drawn_balls[r,] <- sample(box2, size)
}
}
repetitions <- 1000
drawn_balls <- matrix(0, nrow = 1000, ncol = 4)
for (r in 1:repetitions) {
aux <- runif(1)
if (aux > 0.5) {
drawn_balls[r, ] <- sample(box1, size = 4, replace = TRUE)
} else {
drawn_balls[r,] <- sample(box2, size = 4)
}
}
blue_counts <- apply(drawn_balls, 1, function(x) sum(x == 'blue'))
blue_counts
blue_freqs <- vector(mode = "list", length = 5)
for (num_blue in 0:4) {
temp_freqs <- cumsum(blue_counts == num_blue) / (1:1000)
blue_freqs[[num_blue + 1]] <- temp_freqs
}
blue_freqs
load(ggplot2)
library(ggplot2)
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(blue_freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
?apply
blue_counts
?unlist
runApp('Desktop/app1.R')
runApp('Desktop/133/lab09')
runApp('Desktop/app3.R')
blue_freqs
reps = rep(1:1000, 5)
reps
?vector
blue_freqs
wd()
wp()
pw()
pw
wd()
wp()
cp()
sd
wd()
head(USArrests)
states <- rownames(USArrests)
head(states)
nchar(states)
tolower(states)
toupper(states)
casefold(states)
casefold(states, upper = FALSE)
casefold(states, upper = TRUE)
num_chars <- nchar(states)
num_chars
char_freqs = summary(num_chars )
char_freqs
char_freqs = table(num_chars )
char_freqs
barplot(char_freqs)
paste('Pumpkin', 'Pie')
paste('a', 'b', 'c', 'd', 'e')
paste('a', 'b', 'c', 'd', 'e', sep = '-')
paste('a', 1:5, sep = '.')
paste0('Pumpkin', 'Pie'
)
paste('Pumpkin', 'Pie', sep = '')
paste0('a', 1:5)
head(states,5)
paste(head(states, 5), 7:10, sep = " = ")
paste(head(states, 5), 7:10, sep = "=")
paste(head(states, 5), 7:10, sep = "= ")
paste(head(states, 5), 6:10, sep = "= ")
paste(head(states, 5), c(7,6,7,8,10), sep = "= ")
paste(head(states, 5), c(7,6,7,8,10), sep = "= ", collapse = '')
paste(head(states, 5), collapse = '')
substr('Berkeley', 1, 3)
substr(states, 1, 3)
substr(states, 1, -3)
substr(states, -1, -3)
substr(states, -1)
substr(states, -1, 1)
substr(states, 3, -1)
substr(states, 0, -1)
substr(states,-1, 3)
substr(states,-1, -2)
substr(states,-5, 2)
substr(states,1, 4)
substr(states,nchar(char_freqs)- 1, 3)
substr(states, nchar(states), 3)
substr(states, nchar(states)-3,  nchar(states))
substr(states, nchar(states)-4,  nchar(states))
substr(states, nchar(states)-2,  nchar(states))
substr(states, 1,  nchar(states)-2:nchar(states))
substr(states, 1,  nchar(states)-2))
v
substr(states, 1,  nchar(states)-2)
substr(states, 1, substr(states, nchar(states)-2,  nchar(states)) )
substr(states, 1, 3 )
substr(states, nchar(states)-2,  nchar(states))
substr(states, 1,1)
paste(substr(states, 1,1), substr(states, nchar(states)-2,  nchar(states)))
paste(substr(states, 1,1), substr(states, nchar(states)-2,  nchar(states)), sep = '')
states[num_chars == 4]
states[num_chars == 10]
paste(states[num_chars == 4], collapse = ", ")
paste(states[num_chars == 4], collapse = ", ")paste(states[num_chars == 4], collapse = ", ")
paste(states[num_chars == 4], collapse = ", ")
states_list <- vector()
states_list
to_celsius <- function(x = 1) {
(x - 32) * (5/9)
}
to_kelvin <- function(x = 1) {
(x + 459.67) * (5/9)
}
to_reaumur <- function(x = 1) {
(x - 32) * (4/9)
}
to_rankine <- function(x = 1) {
x + 459.67
}
temp_convert <- function(x = 1, to = "celsius") {
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert <- function(x = 1, to = "celsius") {
switch(toLower(to),
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'Celsius')
temp_convert <- function(x = 1, to = "celsius") {
switch(tolower(to),
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'Celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
paste("file", 1:10)
paste("file", 1:10, sep = '')
paste(paste("file", 1:10, sep = ''), ".csv", sep = '')
temp <- c("file1.csv","file2.csv",
"file3.csv","file4.csv","file5.csv",
"file6.csv","file7.csv",
"file8.csv","file9.csv","file10.csv")
temp
concat(1, 2)
?concat
paste("file", 1:10, ".csv")
paste("file", 1:10, ".csv", spe = '')
paste("file", 1:10, ".csv", sep = '')
temp4 <- paste("file", 1:10, ".csv", sep = '')
temp4
temp1 <- substr(temp1, "file")
temp1 <- paste("file", 1:10, sep = '')
temp2 <- paste(paste("file", 1:10, sep = ''), ".csv", sep = '')
temp3 <- c("file1.csv","file2.csv",
"file3.csv","file4.csv","file5.csv",
"file6.csv","file7.csv",
"file8.csv","file9.csv","file10.csv")
temp4 <- paste("file", 1:10, ".csv", sep = '')
temp1 <- substr(temp1, "file")
temp1 <- substr(temp1, 1,4) <- "dataset"
temp1
temp1 <- paste("file", 1:10, sep = '')
temp1
temp1 <- substr(temp1, 1,4) <- "dataset"
temp1
substr(temp1, 1,4) <- "dataset"
temp1 <- paste("file", 1:10, sep = '')
temp1
temp5 <- substr(temp1, 1,4) <- "dataset"
temp5
temp5 <- substr(temp3, 1,4) <- "dataset"
temp5
substr(temp3, 1,4)
temp3
temp1
temp1 <- paste("file", 1:10, sep = '')
temp2 <- paste(paste("file", 1:10, sep = ''), ".csv", sep = '')
temp3 <- c("file1.csv","file2.csv",
"file3.csv","file4.csv","file5.csv",
"file6.csv","file7.csv",
"file8.csv","file9.csv","file10.csv")
temp4 <- paste("file", 1:10, ".csv", sep = '')
substr(temp3, 1,4) <- "dataset"
substr(temp2, 1,4) <- "dataset"
substr(temp4, 1,4) <- "dataset"
temp3
temp2
temp2
colors()
is_color  <-function(color) {
color %in% color()
}
is_color('blue')
is_color  <-function(color) {
color %in% colors()
}
is_color('blue')
is_color('blue')
is_color('bl')
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrs
sapply(letters, function(x) x<-sum(x==unlist(strsplit(a,""))))
sapply(let, function(x) x<-sum(x==unlist(strsplit(letrs,""))))
let <- c("a", "e", "i", "o", "u")
sapply(let, function(x) x<-sum(x==unlist(strsplit(letrs,""))))
letters
sapply(letters, function(x) x<-sum(x==unlist(strsplit(letrs,""))))
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
cat("---", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat(title: "Some title", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("---", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: 'Some title'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: 'today's date'", file = outfile, append = TRUE)
cat("output: html_document", file = outfile, append = TRUE)
cat("---", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: 'Some title'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("author: 'Your name'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: 'today's date'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document", file = outfile, append = TRUE)
cat("---", file = outfile, append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
cat("---", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: 'Some title'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("author: 'Your name'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: 'today's date'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document", file = outfile, append = TRUE)
cat("---", file = outfile, append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append = TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
cat("---", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: 'Some title'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("author: 'Your name'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: 'today's date'", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("---", file = outfile, append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append = TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
runif(col, 1, 20)
runif(1,2)
runif("blue", 1,2)
runif(2)
runif("blue")
runif()
runif(col)
runif("blue")
runif(1-)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
x<-runif(1)
y<- runif(2)
x
y
y<- runif(2)
y
y
plot(runif(20))
plot(runif(20))
plot(runif(20))
plot(runif(20))
plot(runif(20))
plot(runif(20))
plot(runif(20))
plot(runif(20))
plot(runif(20))    plot(runif(100))
plot(runif(100))
plot(runif(100))
plot(runif(100))
plot(runif(100))
plot(runif(100))colplot <-function(col) {
if (is_col(col)) {
plot(runif(100), main = paste("Testing color", col))
}
stop("WRONG COLOR!")
}
colplot <-function(col) {
if (is_color(col)) {
plot(runif(100), main = paste("Testing color", col))
}
stop("WRONG COLOR!")
}
colplot('blue')
colplot("blue")
is_col('blue')
is_color('blue')
colplot('blue')
colplot <-function(col) {
if (is_color(col)) {
plot(runif(100), main = paste("Testing color", col))
} else {
stop("WRONG COLOR!")
}
}
colplot('blue')
len(letrs)
length(letrs)
ncsapply(letters, function(x) sum(x==unlist(strsplit(letrs,""))))
sapply(letters, function(x) sum(x==unlist(strsplit(letrs,""))))
sapply(letters, function(x) sum(x==unlist(strsplit(letrs,""))))
sapply(letters, function(x) sum(x %in% letters)
)
sapply(letters, function(x) sum(x %in% letrs)
)
sapply(letters, function(x) sum(x %in% letrs))
vowels <- sapply(letters, function(x) sum(x==unlist(strsplit(letrs,""))))
vowels
count_letters <- function(letrs) {
letters <- length(letrs)
}
count_letters(letrs)
letters
count_letters <- function(letrs) {
length(letrs)
}
letters
count_letters(letrs)
table(length)
table(letrs)
sum(table(letrs))
sum(letrs  %in% let)
count_letters <- function(letrs) {
let <- c("a", "e", "i", "o", "u")
paste("letters:", length(letrs))
vowels <- sum(letrs  %in% let)
paste("vowels:", vowels)
paste("consonants:",length(letrs)-vowels)
}
count_letters <- function(letrs) {
let <- c("a", "e", "i", "o", "u")
print(paste("letters:", length(letrs)))
vowels <- sum(letrs  %in% let)
print(paste("vowels:", vowels))
print(paste("consonants:",length(letrs)-vowels))
}
count_letters(letrs)
library(shiny); runApp('Desktop/133/stat133-hws-fall17/hw04/app/gradevis.R')
getwd()
setwd("/Users/Roberto/Desktop/stat133-hws-fall17/hw04")
setwd("/Users/Roberto/Desktop/133/stat133-hws-fall17/hw04")
getwd()
library(shiny); runApp('app/gradevis.R')
runApp('app/gradevis.R')
